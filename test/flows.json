[
    {
        "id": "d577ba5d.a271b8",
        "type": "tab",
        "label": "Device Disconnection Alert",
        "disabled": false,
        "info": ""
    },
    {
        "id": "a3d8dc1f.2ef57",
        "type": "tab",
        "label": "MQTT to Thinger.io",
        "disabled": false,
        "info": ""
    },
    {
        "id": "5f747490.ef8edc",
        "type": "tab",
        "label": "GPS Geofences",
        "disabled": false,
        "info": ""
    },
    {
        "id": "a4b9f2e08c15ad79",
        "type": "tab",
        "label": "Device creation",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "bcfa644f1bf43d03",
        "type": "tab",
        "label": "Modify Incoming data",
        "disabled": false,
        "info": ""
    },
    {
        "id": "ec0dd4b1ef5aa9a8",
        "type": "thinger-server",
        "host": "$(THINGER_HOST)",
        "name": "local",
        "ssl": false
    },
    {
        "id": "79cc5157a4c20036",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "b5b501a2.a5287",
        "type": "server-events",
        "z": "d577ba5d.a271b8",
        "name": "",
        "asset": "",
        "event": "device_state_change",
        "filter": "",
        "filters": {
            "state": "disconnected"
        },
        "bucket": "",
        "device": "",
        "endpoint": "",
        "state": "disconnected",
        "server": "ec0dd4b1ef5aa9a8",
        "x": 231,
        "y": 158.99999809265137,
        "wires": [
            [
                "6fd24968.0dc1b8"
            ]
        ]
    },
    {
        "id": "6fd24968.0dc1b8",
        "type": "endpoint-call",
        "z": "d577ba5d.a271b8",
        "name": "",
        "endpoint": "DisconnectionAlert",
        "server": "ec0dd4b1ef5aa9a8",
        "x": 481,
        "y": 158.99999809265137,
        "wires": [
            []
        ]
    },
    {
        "id": "ce84849f.8d4278",
        "type": "mqtt in",
        "z": "a3d8dc1f.2ef57",
        "name": "MQTT Device",
        "topic": "Device",
        "qos": "2",
        "datatype": "json",
        "broker": "79cc5157a4c20036",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 193.0000114440918,
        "y": 139.99999332427979,
        "wires": [
            [
                "af229fc2.2759a"
            ]
        ]
    },
    {
        "id": "af229fc2.2759a",
        "type": "function",
        "z": "a3d8dc1f.2ef57",
        "name": "Json Creator",
        "func": "msg.payload = {\"temperatura1\":msg.payload};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 352.9999771118164,
        "y": 139.99999332427979,
        "wires": [
            [
                "14bff97cb9a4beca"
            ]
        ]
    },
    {
        "id": "da89c2c1.ce839",
        "type": "debug",
        "z": "a3d8dc1f.2ef57",
        "name": "Check Result",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 750,
        "y": 140,
        "wires": []
    },
    {
        "id": "14bff97cb9a4beca",
        "type": "device-callback",
        "z": "a3d8dc1f.2ef57",
        "name": "",
        "device": "temperature sensor",
        "body": "",
        "server": "ec0dd4b1ef5aa9a8",
        "x": 550,
        "y": 140,
        "wires": [
            [
                "da89c2c1.ce839"
            ]
        ]
    },
    {
        "id": "207937f8.10dc48",
        "type": "server-events",
        "z": "5f747490.ef8edc",
        "name": "",
        "asset": "",
        "event": "device_callback_call",
        "filter": "",
        "filters": {},
        "bucket": "",
        "device": "",
        "endpoint": "",
        "state": "",
        "server": "ec0dd4b1ef5aa9a8",
        "x": 158.60000228881836,
        "y": 264.00000381469727,
        "wires": [
            [
                "8f3dd8cd.71e4e8",
                "56adf62.4aa1108"
            ]
        ]
    },
    {
        "id": "553ff10.2e60c1",
        "type": "geofence",
        "z": "5f747490.ef8edc",
        "name": "",
        "mode": "polyline",
        "inside": "false",
        "rad": 0,
        "points": [
            {
                "latitude": 39.89203705190782,
                "longitude": -3.8814695924520493
            },
            {
                "latitude": 40.06041580712444,
                "longitude": -3.507934436202049
            },
            {
                "latitude": 40.09404176311921,
                "longitude": -3.0025633424520493
            },
            {
                "latitude": 41.14474248673421,
                "longitude": -3.5299070924520493
            },
            {
                "latitude": 40.253538217286675,
                "longitude": -4.628539904952049
            },
            {
                "latitude": 40.102445657515226,
                "longitude": -3.771606311202049
            }
        ],
        "centre": {},
        "floor": "",
        "ceiling": "",
        "worldmap": false,
        "outputs": 1,
        "x": 573.0000076293945,
        "y": 265.0000276565552,
        "wires": [
            [
                "be251c21.6d6e3",
                "233f843b.94472c"
            ]
        ]
    },
    {
        "id": "be251c21.6d6e3",
        "type": "endpoint-call",
        "z": "5f747490.ef8edc",
        "name": "",
        "endpoint": "alert",
        "server": "ec0dd4b1ef5aa9a8",
        "x": 771.6000595092773,
        "y": 266.0000286102295,
        "wires": [
            []
        ]
    },
    {
        "id": "8f3dd8cd.71e4e8",
        "type": "debug",
        "z": "5f747490.ef8edc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 399.6000061035156,
        "y": 346.00000762939453,
        "wires": []
    },
    {
        "id": "233f843b.94472c",
        "type": "debug",
        "z": "5f747490.ef8edc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 790.6000366210938,
        "y": 347.0000057220459,
        "wires": []
    },
    {
        "id": "56adf62.4aa1108",
        "type": "change",
        "z": "5f747490.ef8edc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 389.6000061035156,
        "y": 265.00000381469727,
        "wires": [
            [
                "553ff10.2e60c1"
            ]
        ]
    },
    {
        "id": "507f1a24287e53e2",
        "type": "function",
        "z": "a4b9f2e08c15ad79",
        "name": "loop - 10 devices",
        "func": "let device = msg.device;\n\nfor (let i= 0; i < 10; i++) {\n    msg.device = `${device}_${i}`;\n    msg.name = `${device} ${i}`;\n    msg.description = \"Device auto generated from Node-RED flow\";\n    node.send(msg);\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 220,
        "wires": [
            [
                "752ee26eb02bed51"
            ]
        ]
    },
    {
        "id": "415e0ad528c64866",
        "type": "inject",
        "z": "a4b9f2e08c15ad79",
        "name": "inject device name",
        "props": [
            {
                "p": "device",
                "v": "climastick",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 270,
        "y": 220,
        "wires": [
            [
                "507f1a24287e53e2"
            ]
        ]
    },
    {
        "id": "752ee26eb02bed51",
        "type": "device-create",
        "z": "a4b9f2e08c15ad79",
        "name": "",
        "deviceType": "Generic",
        "deviceId": "",
        "deviceCredentials": "",
        "deviceName": "",
        "description": "",
        "assetType": "temperature",
        "assetGroup": "house",
        "server": "ec0dd4b1ef5aa9a8",
        "x": 690,
        "y": 220,
        "wires": [
            [
                "e1da854b042efd77"
            ]
        ]
    },
    {
        "id": "69d16e383e46acd9",
        "type": "debug",
        "z": "a4b9f2e08c15ad79",
        "name": "debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 715,
        "y": 300,
        "wires": [],
        "l": false
    },
    {
        "id": "3be83c6bcc65f1cb",
        "type": "comment",
        "z": "a4b9f2e08c15ad79",
        "name": "Create 10 device and assign a bucket to all of them",
        "info": "This node creates 10 devices in Thinger.io Platform, in this case climasticks, from 0 to 9; all of them with the same credentials, type and group. Also, 10 buckets are created with the date source being the devices created.\n\n### Device create node\nThe device id, name and description are passed as input to the device create node, while the credentials, type and group is configured through the device create node dialog.\n\n### Bucket create node\nThe id, bucket name and description are passed as input to the bucket create node, as well as the extra source (the device in this case) for the data source.\nThe source (device), resource, update interval and asset type and group are configured through the bucket create node dialog.",
        "x": 350,
        "y": 160,
        "wires": []
    },
    {
        "id": "05af9a7c2958e6c6",
        "type": "bucket-create",
        "z": "a4b9f2e08c15ad79",
        "name": "",
        "bucketId": "",
        "bucket": "",
        "description": "",
        "enabled": true,
        "source": "device",
        "extraSource": "",
        "resource": "temperature",
        "update": "interval",
        "interval": "1m",
        "assetType": "temperature",
        "assetGroup": "house",
        "server": "ec0dd4b1ef5aa9a8",
        "x": 570,
        "y": 300,
        "wires": [
            [
                "69d16e383e46acd9"
            ]
        ]
    },
    {
        "id": "e1da854b042efd77",
        "type": "change",
        "z": "a4b9f2e08c15ad79",
        "name": "Reorder message to create bucket",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "id",
                "pt": "msg",
                "to": "device",
                "tot": "msg"
            },
            {
                "t": "move",
                "p": "name",
                "pt": "msg",
                "to": "bucket",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 300,
        "wires": [
            [
                "05af9a7c2958e6c6"
            ]
        ]
    },
    {
        "id": "3310aff0318c010d",
        "type": "server-events",
        "z": "bcfa644f1bf43d03",
        "name": "",
        "asset": "",
        "event": "device_callback_call",
        "filter": "",
        "filters": {},
        "bucket": "",
        "device": "",
        "endpoint": "",
        "state": "",
        "server": "ec0dd4b1ef5aa9a8",
        "x": 290,
        "y": 140,
        "wires": [
            [
                "d50d939aa230b928"
            ]
        ]
    },
    {
        "id": "d50d939aa230b928",
        "type": "function",
        "z": "bcfa644f1bf43d03",
        "name": "W to KW",
        "func": "msg.payload = {\"KW\":msg.payload.payload.wats/1000};\nmsg.id=msg.payload.device;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 140,
        "wires": [
            [
                "f6cc88d04b1b8cf8"
            ]
        ]
    },
    {
        "id": "f6cc88d04b1b8cf8",
        "type": "bucket-write",
        "z": "bcfa644f1bf43d03",
        "name": "",
        "bucket": "",
        "value": "",
        "server": "ec0dd4b1ef5aa9a8",
        "x": 650,
        "y": 140,
        "wires": []
    }
]